{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Plan B\\\\Desktop\\\\WorkSpace\\\\UpBase Ltd\\\\News-Dev-Test-July\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport News from '../components/News';\nimport NewsUploadForm from '../components/newsUploadForm';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Welcome to Upbase Ltd News\"), props.newsList.totalResults, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"All News\"), __jsx(NewsUploadForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  })));\n};\n\n_c = Index;\nexport default Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=0ff232978e2d41c7872088eb9be53d23');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            newsList: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Plan B/Desktop/WorkSpace/UpBase Ltd/News-Dev-Test-July/pages/index.js"],"names":["Fetch","Layout","News","NewsUploadForm","Index","props","newsList","totalResults","getInitialProps","fetch","res","json","data"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEGA,KAAK,CAACC,QAAN,CAAeC,YAFlB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAME,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADiB;AAAA,CAAnB;;KAAMH,K;AAaN,eAAeA,KAAf;AAEAA,KAAK,CAACI,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJC,KAAK,CACrB,gGADqB,CADD;;AAAA;AAChBC,UAAAA,GADgB;AAAA;AAAA,iBAIHA,GAAG,CAACC,IAAJ,EAJG;;AAAA;AAIhBC,UAAAA,IAJgB;AAAA,2CAMf;AACLN,YAAAA,QAAQ,EAAEM;AADL,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport Layout from '../components/Layout';\r\nimport News from '../components/News';\r\nimport NewsUploadForm from '../components/newsUploadForm';\r\n\r\nconst Index = props => (\r\n  <Layout>\r\n    <div>\r\n      <h2>Welcome to Upbase Ltd News</h2>\r\n      {props.newsList.totalResults}\r\n      <br />\r\n      <h4>All News</h4>\r\n      {/* <News /> */}\r\n      <NewsUploadForm />\r\n    </div>\r\n  </Layout>\r\n);\r\n\r\nexport default Index;\r\n\r\nIndex.getInitialProps = async function () {\r\n  const res = await fetch(\r\n    'http://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=0ff232978e2d41c7872088eb9be53d23'\r\n  );\r\n  const data = await res.json();\r\n\r\n  return {\r\n    newsList: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}